
Yii Installation :
-----------------

composer create-project --prefer-dist yiisoft/yii2-app-basic yii
composer create-project --prefer-dist --stability=dev yiisoft/app projName



Migration:
---------

	1. Create new migrtions
	2. Apply new migrations
	3. Revert migrations
	4. Re-apply migrations
    5. Show migration history or status


php yii migrate/create create_news_table
php yii migrate
php yii migrate/create drop_news_table


php yii migrate/create create_post_table --fields="author_id:integer:notNull:foreignKey(user),category_id:integer:defaultValue(1):foreignKey,title:string,body:text"


yii migrate/down
yii migrate/down 3

yii migrate/redo        # redo the last applied migration
yii migrate/redo 3

yii migrate/fresh       # truncate the database and apply all migrations from the beginning


yii migrate/history     # showing the last 10 applied migrations
yii migrate/history 5   # showing the last 5 applied migrations
yii migrate/history all # showing all applied migrations

yii migrate/new         # showing the first 10 new migrations
yii migrate/new 5       # showing the first 5 new migrations
yii migrate/new all     # showing all new migrations


yii migrate/fresh


//Migrate Multiple Databases
yii migrate --db=db2


>> AddColumn
yii migrate/create add_position_column_to_post_table --fields="name:string"
yii migrate/create add_position_column_to_post_table --fields="position:integer"

>> DropTable
yii migrate/create drop_post_table --fields="title:string(12):notNull:unique,body:text:"


-----------------------------------------------------------------------------


php yii gii/controller --controllerClass="app\controllers\Post"
php yii gii/model --tableName="post" --modelClass=Post

-----------------------------------------------------------------------------

public function up(){}
public function down(){}


//Implement safeUp/safeDown instead if transaction is needed
public function safeUp(){}
public function safeDown(){}

-------------------------------------------------------------------------------

Example 01: 

public function run() {
	$this->createTable('place', [
		'id' => $this->primaryKey()->unsigned()->notNull(),
		'place_id' => $this->string(40)->notNull(),
		'lat' => $this->string(40)->notNull(),
		'lng' => $this->string(40)->notNull(),
		'country_code' => $this->string(2)->notNull(),
        'is_country' => $this->tinyInteger(4)->notNull(),
	]);	
}

------------

Example 02: 

public function run() {
	$this->createTable('place', [
		'id' => $this->primaryKey(),
		'title' => $this->string(),
		'body' => $this->text(),
		]);	
}
----------------------------------------------------------------


>> Database Seeding : 
   ................ 



1. Using Faker Factory

  -- SeedController --


<?php

namespace app\controllers;

use Yii;
use yii\web\Controller;
use yii\web\Response;
use app\models\Student;
use Faker;

class SeedController extends \yii\web\Controller
{
    public function actionIndex()
    {
        $faker = Faker\Factory::create();        

     for($i=0;$i<10;$i++){
        $student = new Student;
        $student->name = $faker->name;
        $student->phone = $faker->phoneNumber; 
        $student->address = $faker->address;    
        $student->save();
     }
    
        return $this->render('index');
    }

}


-- Student Model --


<?php

namespace app\models;

use Yii;


class Student extends \yii\db\ActiveRecord
{

    public static function tableName()
    {
        return 'student';
    }


    public function rules()
    {
        return [
            [['name', 'phone'], 'string', 'max' => 255],
            [['address'], 'string', 'max' => 255],
        ];
    }

    public function attributeLabels()
    {
        return [
            'id' => 'ID',
            'name' => 'Name',
            'phone' => 'Phone',
        ];
    }
}



-- Student Migration --


<?php

use yii\db\Migration;


class m231103_083214_create_student_table extends Migration
{
 
    public function safeUp()
    {
        $this->createTable('{{%student}}', [
            'id' => $this->primaryKey(),
            'name' => $this->string(),
            'phone' => $this->string(),
            'address' => $this->string()
        ]);
    }


    public function safeDown()
    {
        $this->dropTable('{{%student}}');
    }
}


-----------------------------------------------------------------


php yii seed/users


>> Seeding Database:

3.

https://www.yiiframework.com/extension/yii2-db-seeder


composer require tebazil/yii2-db-seeder

OR Add: 

"tebazil/yii2-db-seeder": "*"


php yii seed
php yii seed seederClassName
php yii seeder/create seederName

----------------------------------------------------------------------
